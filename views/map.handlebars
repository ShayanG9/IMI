<div id="map"></div>

<script>

    var eventData = {
        sender: null,
        eventName: null,
        lat: null,
        long: null
    };

    var map;

    var eventsList = [];
    var peopleDict = {};

    var geocoder;

    var eventsRef = firebase.database().ref("event");

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 43.653299, lng: -79.383011},
            zoom: 10,
            streetViewControl: false,
            mapTypeControl: false

        });
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            map.setCenter(pos);
          });
        } else {
          // Browser doesn't support Geolocation
          window.alert("We werent able to find your location");
        }
        geocoder = new google.maps.Geocoder;
    }

    // Deletes all markers in the array by removing references to them.
    function deleteEventMarkers() {
        for (var i = 0; i < eventsList.length; i++) {
            eventsList[i].marker.setMap(null);
        }
        eventsList = [];
    }


    function deleteEvent(index) {
        eventsList[index].marker.setMap(null);
        eventsRef.child(eventsList[index].eventName).remove();
        eventsList.splice(index, 1);
    }


    eventsRef.on("value", function(snapshot) {
        deleteEventMarkers();
        var index = 0;
        snapshot.forEach(function(childSnapShot){

            var details = childSnapShot.val();

            var eventName = childSnapShot.key;
            var latlng = {lat: parseFloat(details.lat), lng: parseFloat(details.long)};
            var info = details.info;
            var address = details.addr;

            var marker = new google.maps.Marker({position: latlng, map: map, title:eventName});

            var infoWindow = new google.maps.InfoWindow({
                content: '<div id="content">'+
                    '<h1 id="firstHeading">'+eventName+'</h1>'+
                    '<h4>'+ address +'</h4>' +
                    '<div id="bodyContent">'+
                    '<p>'+ info +'</p>'+
                    '<button type="button" id="deleteButton" onclick="deleteEvent('+index+')">Delete</button>' +
                    '</div>'+
                    '</div>'
            });
            marker.addListener("click", function() {
                infoWindow.open(map, marker);
            });

            eventsList.push({
                eventName: eventName,
                latlng: latlng,
                info: info,
                address: address,
                marker: marker,
                infoWindow: infoWindow
            });
            index++;
        });
    }, function (errorObject) {
        console.log("The read failed: " + errorObject.code);
    });

    peopleRef.on("child_added", function(snapshot, prevChildKey){
        var name = snapshot.key;
        var details = snapshot.val();
        var latlng = {lat: details.lat, lng: details.long};

        var marker = new google.maps.Marker({position: latlng, map: map, title: name});
        var infoWindow = new google.maps.InfoWindow({
            content: '<h1 id="firstHeading">' + name + '</h1>'
        });
        marker.addListener("click", function(){
            infoWindow.open(map, marker);
        });

        peopleDict[name] = {
            latlng: latlng,
            marker: marker,
            infoWindow: infoWindow
        };
    });

    peopleRef.on("child_changed", function(snapshot){
        var name = snapshot.key;
        var details = snapshot.val();
        var latlng = {lat: details.lat, lng: details.long};

        peopleDict[name].marker.setPosition(latlng);
    });

    peopleRef.on("child_removed", function(snapshot){
        var name = snapshot.key;
        peopleDict[name].marker.setMap(null);
        delete peopleDict[name];
    });

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBsYQueSaRPnG3Rm1PjJHMmgCgXwZs9l8E&callback=initMap"
        async defer></script>
